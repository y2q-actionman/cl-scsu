(in-package :scsu)

(defun test-0 (char)
  (let ((state (make-instance 'scsu-state))
	(buffer (make-array 32 :element-type '(unsigned-byte 8))))
    (declare (type (simple-array (unsigned-byte 8) *) buffer)
	     (dynamic-extent buffer))
    (fill buffer 0)
    (format t "~&Character ~C, code ~X~%" char (char-code char))
    (encode-unit state (char-code char) buffer)
    (format t "Buffer:~%~A~%" buffer)
    (let* ((ret (decode-unit state buffer))
	   (ret-char (code-char ret)))
      (format t "~&Restored code ~X, char ~C~%" ret ret-char)
      ret-char)))
